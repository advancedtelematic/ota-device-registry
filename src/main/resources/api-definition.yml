openapi: 3.0.0
info:
  description: |
    HERE OTA API for device information

    This API uses a Bearer token for authentication. To obtain a bearer token, download a credentials.zip from the HERE OTA Connect website and extract `treehub.json`.

    To obtain a valid Bearer token, you can use HTTP:

    ```
    curl -X POST <auth-plus-url>/token -d "grant_type=client_credentials" \
      -u <client-id>:<client-secret> |
      jq -r .access_token
    ````

    `auth-plus-url`, `client-id` and `client-secret` are included in `treehub.json`.

    This access token can be used to access this API:

    ```
    curl -H 'Authorization: Bearer $token' https://this-api-url/v1alpha/devices
    ```

    The token will expire every 24 hours. If the current token is expired, the user needs to request a new token to continue using the API.

    To try out the API, you can obtain a token using the above steps and click the "Authorize" button below. Paste the token in the "Value" field and click "Authorize". You are now logged in and you can click the "try it now" buttons below.

    *Warning*

    This API is currently in alpha and can change without prior notice.

  version: 1.0.0-alpha
  title: HERE OTA API
servers:
  - url: https://api.ota.here.com/v1alpha
    description: production
  - url: https://ota-api-gateway-sit.borg-rd.nw.ops.here.com/v1alpha
    description: sit
  - url: /v1alpha
    description: this instance
  - url: "{uri}"
    description: custom
    variables:
      uri:
        default: http://localhost/v1alpha
        description: full uri to api

security:
  - bearerAuth: []

paths:
  /devices:
    get:
      tags:
        - devices
      summary: Returns all devices for the current account
      description: Paginated list of devices, sorted by creation date descending
      parameters:
        - in: query
          name: deviceId
          description: the id used by the client to provision the device
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationResponseDevice"
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /devices/{uuid}:
    get:
      tags:
        - devices
      summary: Find device by ID
      description: Returns a single device
      parameters:
        - name: uuid
          in: path
          description: ID of device to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Information about the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        404:
          description: Device not found
        401:
          $ref: '#/components/responses/UnauthorizedError'


  /devices/{uuid}/queue:
    get:
      tags:
        - devices
      summary: Queue for a device
      description: Show the update queue for a device
      parameters:
        - name: uuid
          in: path
          description: ID of the device to return the queue
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Queued updates for the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QueueItem"

  /devices/{uuid}/events:
    get:
      tags:
        - devices
      summary: Events reported by a device
      description: Show all events reported by a device, sorted by most recent first
      parameters:
        - name: uuid
          in: path
          description: ID of the device
          required: true
          schema:
            type: string
            format: uuid
        - name: updateId
          in: query
          description: Only return events that refer to this update
          required: false
          schema:
            type: string
            format: string
      responses:
        200:
          description: A description of the current status of the update in this device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceEvents"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SimplifiedDevice:
      type: object
      required:
      - uuid
      - deviceId
      properties:
        deviceUuid:
          type: string
          format: uuid
        deviceId:
          type: string
          format: string

    PaginationResponseDevice:
      type: object
      properties:
        total:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        values:
          type: array
          items:
            $ref: "#/components/schemas/SimplifiedDevice"

    DeviceEvents:
      type: object
      properties:
        deviceUuid:
          type: string
          format: uuid
        events:
          type: array
          items:
            type: object
            required: [name, receivedTime]
            properties:
              updateId:
                type: string
                format: string
              ecuId:
                type: string
                format: string
              name:
                type: string
                enum: [EcuDownloadStarted, EcuDownloadCompleted, EcuInstallationStarted, EcuInstallationApplied, EcuInstallationCompleted, DevicePaused, DeviceResumed, CampaignAccepted, CampaignDeclined, CampaignPostponed]
                description:  >
                  EcuDownloadStarted - Package download for this ECU has started <br>
                  EcuDownloadCompleted - Package download for this ECU is completed <br>
                  EcuInstallationStarted - Package installation for this ECU has started <br>
                  EcuInstallationApplied - Package has been applied to this ECU but is pending reboot <br>
                  EcuInstallationCompleted - Package installation for this ECU is completed <br>
                  DevicePaused - The device has been paused (downloads are paused and API calls are deferred) <br>
                  DeviceResumed - The device has resumed after being paused <br>
                  CampaignAccepted - Campaign has been accepted by the user or it has been automatically accepted by the device <br>
                  CampaignDeclined - Campaign has been declined by the user <br>
                  CampaignPostponed - Campaign has been postponed by the user <br>
              receivedTime:
                type: string
                format: date-time
              deviceTime:
                type: string
                format: date-time

    QueueItem:
      type: object
      properties:
        deviceUuid:
          type: string
          format: uuid
        updateId:
          type: string
          format: string
        ecus:
          type: object
          required: [ecuId, softwareVersion]
          properties:
            ecuId:
              type: string
              format: string
            softwareVersion:
              $ref: "#/components/schemas/SoftwareVersion"

    SoftwareVersion:
      type: object
      required: [filename, length, hashes]
      properties:
        filename:
          type: string
          format: string
        length:
          type: integer
        hashes:
          type: object
          required: [sha256]
          description: A map containing the available checksums for this update. The key for each item is the
            algorithm used to calculate the checksum defined in the value.
          properties:
            sha256:
              type: string
              format: string
              minLength: 64
              maxLength: 64

    Device:
      type: object
      required: [deviceId, uuid, name, status]
      properties:
        deviceId:
          type: string
          format: string
        deviceUuid:
          type: string
          format: uuid
        name:
          type: string
          format: string
        lastSeen:
          type: string
          format: date-time
        primaryEcu:
          type: object
          required: [ecuId, installedSoftwareVersion]
          properties:
            ecuId:
              type: string
              format: string
            installedSoftwareVersion:
              $ref: "#/components/schemas/SoftwareVersion"

        status:
          type: string
          description: Current status of device
          enum:
          - NotSeen
          - Error
          - UpToDate
          - Outdated

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
