stages:
  - prepare
  - test
  - build image
  - trigger deploy
  - publish

variables:
  MYSQL_ROOT_PASSWORD: "root"
  MYSQL_DATABASE: "device_registry"
  MYSQL_USER: "device_registry"
  MYSQL_PASSWORD: "device_registry"

services:
  - name: mariadb:10.2
    alias: db
    command:
      - --character-set-server=utf8
      - --collation-server=utf8_unicode_ci
      - --max_connections=1000

test:
  stage: test
  tags:
    - docker-sock
  image: advancedtelematic/gitlab-jobs:0.1.0
  variables:
    DB_URL: "jdbc:mariadb://db:3306/device_registry"
  before_script:
    - echo "CREATE DATABASE device_registry_test; CREATE DATABASE device_registry_ptest; GRANT ALL PRIVILEGES ON \`device\_registry%\`.* TO 'device_registry'@'%'; FLUSH PRIVILEGES; " > db_user.sql
    - mysqladmin ping --protocol=TCP -h db -P 3306 -u device_registry -pdevice_registry
    - mysql -v -h db -u root -proot < db_user.sql
  script:
    - ./sbt -sbt-dir ./.sbt -ivy ./.ivy2 -J-Xmx1G -J-XX:ReservedCodeCacheSize=128m test
  cache:
    paths:
      - .ivy2/
      - .sbt

build docker image:
  stage: build image
  only:
    - master
  tags:
    - docker-sock
  variables:
  image: advancedtelematic/gitlab-jobs:0.1.0
  script:
    - env | sort
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - ./sbt -x -sbt-dir ./.sbt -ivy ./.ivy2 -batch docker:publish -J-Xmx1G -J-XX:ReservedCodeCacheSize=128m -Dsbt.log.noformat=true
  cache:
    paths:
      - .ivy2/
      - .sbt/

trigger dev deploy:
  stage: trigger deploy
  only:
    - master
  variables:
    ENV: "dev"
    NEW_TAG: $CI_COMMIT_SHA
    SERVICE: device-registry
    CREATE_COMMIT: "true"
  trigger:
    project: OLP/EDGE/OTA/infra/deployment-descriptors
    branch: master

trigger sit deploy:
  stage: trigger deploy
  only:
    - deploy/sit
  variables:
    ENV: "sit"
    NEW_TAG: $CI_COMMIT_SHA
    SERVICE: device-registry
    CREATE_COMMIT: "true"
  trigger:
    project: OLP/EDGE/OTA/infra/deployment-descriptors
    branch: master    


trigger veracode scan:
  # prepare and submit for static code analysis
  stage: trigger deploy
  only:
    variables:
      - $VERACODE_API_ID
  image: advancedtelematic/gitlab-jobs:0.1.0
  before_script:
    # The latest wrapper version can be found in https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/
    - wget -q -O veracode-wrapper.jar https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/${VERACODE_WRAPPER_VERSION}/vosp-api-wrappers-java-${VERACODE_WRAPPER_VERSION}.jar
    - ./sbt package
    - mv target/scala-*/device-registry_*.jar ./scan.jar
  script:
    - java -jar veracode-wrapper.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY}
      -action UploadAndScan -appname "OTA Backend - device registry" -createprofile true -autoscan true
      -filepath scan.jar -version "job ${CI_JOB_ID} in pipeline ${CI_PIPELINE_ID} for ${CI_PROJECT_NAME} repo"
  artifacts:
    paths:
      - scan.jar

trigger-deps-scan:
  # perform dependencies CVE analysis
  stage: trigger deploy
  only:
    - schedules
  image: advancedtelematic/gitlab-jobs:0.1.0
  script:
    - ./sbt dependencyCheckAggregate
    - mv target/scala-*/dependency-check-report.html ./depchk.html
  artifacts:
    paths:
      - depchk.html

pages:
  stage: publish
  only:
    - schedules
  dependencies:
    - trigger-deps-scan
  script:
    - mkdir -p public
    - mv depchk.html public/index.html
  artifacts:
    paths:
      - public
    expire_in: 64 days
